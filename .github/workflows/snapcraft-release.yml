name: Build and Release Snap Package

# 当任何标签被推送到仓库时触发此工作流
# on:
#   push:
#     tags:
#       - '*'
on:
  push:
    branches:
      - '**' # 监听所有分支的 push 事件

# 设置工作流所需的权限
permissions:
  contents: write # 允许创建 Release 和上传构建产物

jobs:
  build-and-release-snap:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu Runner
    steps:
      # 第一步：检出您的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Snapcraft 环境
      - name: Install Snapcraft
        uses: snapcore/action-build@v1

      # 第三步：构建 Snap 包
      # - name: Build Snap package
      #   id: build_snap
      #   run: |
      #     # 使用 snapcraft 构建 Snap 包
      #     cp snap/snapcraft.yaml qm
      #     cd qm && ls
      #     snapcraft
      #     # 查找构建的 .snap 文件
      #     SNAP_PATH=$(find . -name '*.snap' | head -n 1)
      #     SNAP_NAME=$(basename "$SNAP_PATH")
      #     echo "SNAP_PATH=$SNAP_PATH" >> $GITHUB_ENV
      #     echo "SNAP_NAME=$SNAP_NAME" >> $GITHUB_ENV

      # 第四步：创建 GitHub Release
      # 使用推送的标签名作为 Release 的标签和名称
      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub 自动提供的 Token
      #   with:
      #     tag_name: ${{ github.ref_name }} # 获取当前触发工作流的标签名
      #     release_name: Release ${{ github.ref_name }}
      #     body: |
      #       Automated release for tag ${{ github.ref_name }}.
      #       Contains the Snap package built by GitHub Actions.
      #     draft: false      # 设置为 true 可创建草稿 Release
      #     prerelease: false # 设置为 true 可标记为预发布 Release

      # # 第五步：上传 .snap 文件到 Release
      # - name: Upload Release Asset (Snap package)
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # 从上一步获取上传 URL
      #     asset_path: ${{ steps.find_snap.outputs.SNAP_PATH }}       # 要上传的 .snap 文件路径
      #     asset_name: ${{ steps.find_snap.outputs.SNAP_NAME }}       # 在 Release 中显示的文件名
      #     asset_content_type: application/vnd.snap # .snap 文件的 MIME 类型
